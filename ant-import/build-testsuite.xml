<?xml version="1.0" encoding="UTF-8"?>

<!-- ============================================================ -->
<!--  JBoss, the OpenSource J2EE webOS                            -->
<!--  Distributable under LGPL license.                           -->
<!--  See terms of license at http://www.gnu.org.                 -->
<!-- ============================================================ -->

<!-- $Id$ -->

<project>
  
  <property name="tests.dir" value="${basedir}/src/test"/>
  
  <import file="${build.dir}/ant-import/build-testsuite.xml"/>
  
  <!-- Available integration target -->
  <property name="integration.target.${jbossws.integration.target}" value="true"/>

  <!-- Define jboss.home -->
  <condition property="jboss.home" value="${jboss50.home}">
    <equals arg1="${jbossws.integration.target}" arg2="jboss50"/>
  </condition>
  <condition property="jboss.home" value="${jboss42.home}">
    <equals arg1="${jbossws.integration.target}" arg2="jboss42"/>
  </condition>
  <condition property="jboss.home" value="${jboss40.home}">
    <equals arg1="${jbossws.integration.target}" arg2="jboss40"/>
  </condition>

  <!-- Integration Target Server -->
  <condition property="jbossws.integration.target.jboss">
    <isset property="jboss.home"/>
  </condition>
  <condition property="jbossws.integration.target.tomcat">
    <equals arg1="${jbossws.integration.target}" arg2="tomcat"/>
  </condition>

  <!-- Define excluded tests -->
  <property name="excludes-short-name" value="tests-${jbossws.integration.target}-excludes.txt"/>
  <property name="excludesfile" value="${tests.resources.dir}/${excludes-short-name}"/>
  
  <!--
    Init the various classpaths
  -->
  <target name="tests-init" depends="tests-prepare,core-thirdparty-classpath">

    <path id="jbossws.classpath">
      <pathelement location="${spi.dir}/output/lib/jbossws-spi.jar"/>
      <pathelement location="${core.dir}/output/lib/jboss-jaxrpc.jar"/>
      <pathelement location="${core.dir}/output/lib/jboss-jaxws.jar"/>
      <pathelement location="${core.dir}/output/lib/jboss-saaj.jar"/>
      <pathelement location="${core.dir}/output/lib/jbossws-core.jar"/>
      <pathelement location="${core.dir}/output/lib/jbossws-client.jar"/>
    </path>

    <!-- The combined compile classpath -->
    <path id="javac.classpath">
      <path refid="jbossws.classpath"/>
      <path refid="core.thirdparty.classpath"/>
      <pathelement location="${core.thirdparty.dir}/jboss-vfs.jar"/>
      <pathelement location="${core.thirdparty.dir}/junit.jar"/>
      <pathelement location="${core.thirdparty.dir}/qdox.jar"/>
      <pathelement location="${core.thirdparty.dir}/policy.jar"/>
      <pathelement location="${core.thirdparty.dir}/xmlunit1.0.jar"/>
      <pathelement location="${jboss.home}/client/jboss-ejb3-client.jar"/>
    </path>

    <!-- The test client classpath -->
    <path id="tests.client.classpath">
      <path refid="jbossws.classpath"/>
      <pathelement location="${jboss.client}/commons-logging.jar"/>
      <pathelement location="${jboss.client}/jboss-backport-concurrent.jar"/>
      <pathelement location="${jboss.client}/jboss-ejb3-client.jar"/>
      <pathelement location="${jboss.client}/jboss-aop-jdk50-client.jar"/>
      <pathelement location="${jboss.client}/jboss-aspect-jdk50-client.jar"/>
      <pathelement location="${jboss.client}/jbossretro-rt.jar"/>
      <pathelement location="${jboss.client}/log4j.jar"/>
      <pathelement location="${jboss.client}/jbossall-client.jar"/>
      <pathelement location="${jboss.lib}/jboss-aop-jdk50.jar"/>
      <pathelement location="${jboss.lib}/jboss-vfs.jar"/>
      <pathelement location="${jboss.server.lib}/hibernate3.jar"/>
      <pathelement location="${jboss.server.lib}/jboss.jar"/>
      <pathelement location="${jboss.server.lib}/jbosssx.jar"/>
      <pathelement location="${jboss.server.deploy}/juddi-service.sar/juddi.jar"/>
      <pathelement location="${jboss.server.deploy}/juddi-service.sar/juddi-saaj.jar"/>
      <pathelement location="${jboss.server.deploy}/juddi-service.sar/scout.jar"/>
      <path refid="javac.classpath"/>
    </path>

    <!-- The jBPM BPEL classpath -->
    <path id="jbpm.bpel.classpath">
      <path refid="jbossws.classpath"/>
      <pathelement location="${core.thirdparty.dir}/jbpm-bpel"/> <!-- jbpm.cfg.xml -->
      <pathelement location="${core.thirdparty.dir}/jbpm-bpel/jbpm-bpel.jar" />
      <pathelement location="${core.thirdparty.dir}/jbpm-bpel/jbpm-jpdl.jar" />
      <pathelement location="${core.thirdparty.dir}/jbpm-bpel/commons-lang.jar" />
      <pathelement location="${core.thirdparty.dir}/commons-collections.jar"/>
      <pathelement location="${core.thirdparty.dir}/commons-logging.jar"/>
      <pathelement location="${core.thirdparty.dir}/dom4j.jar"/>
      <pathelement location="${core.thirdparty.dir}/jaxen.jar"/>
      <pathelement location="${core.thirdparty.dir}/wsdl4j.jar"/>
      <pathelement location="${core.thirdparty.dir}/jboss-logging-log4j.jar"/>
      <!--
      <pathelement location="${core.thirdparty.dir}/log4j.jar"/>
      <pathelement location="${tests.etc.dir}"/>
      -->
    </path>
    
  </target>

  <!-- ================================================================== -->
  <!-- Generating sources                                                 -->
  <!-- ================================================================== -->

  <target name="wsconsume" depends="tests-init" description="Consume JAX-WS contracts" if="HAVE_JDK_1.5">

    <!-- Define the JAX-WS wsconsume task -->
    <taskdef name="wsconsume" classname="org.jboss.ws.tools.jaxws.ant.wsconsume">
      <classpath refid="jbossws.classpath"/>
      <classpath location="${core.thirdparty.dir}/jbossws-wsconsume-impl.jar"/>
      <classpath location="${core.thirdparty.dir}/jaxb-xjc.jar"/>
    </taskdef>

    <wsconsume wsdl="${tests.resources.dir}/benchmark/jaxws/doclit/WEB-INF/wsdl/BenchmarkWebService.wsdl" package="org.jboss.test.ws.benchmark.jaxws.doclit" sourcedestdir="${tests.output.dir}/wsconsume/java" keep="true" verbose="false"/>
    <wsconsume wsdl="${tests.resources.dir}/interop/soapwsdl/BaseDataTypesDocLitB/WEB-INF/wsdl/service.wsdl" package="org.jboss.test.ws.interop.soapwsdl.basedoclitb" sourcedestdir="${tests.output.dir}/wsconsume/java" keep="true"/>
    <wsconsume wsdl="${tests.resources.dir}/interop/soapwsdl/BaseDataTypesDocLitW/WEB-INF/wsdl/service.wsdl" package="org.jboss.test.ws.interop.soapwsdl.basedoclitw" sourcedestdir="${tests.output.dir}/wsconsume/java" keep="true"/>
    <wsconsume wsdl="${tests.resources.dir}/interop/soapwsdl/BaseDataTypesRpcLit/WEB-INF/wsdl/service.wsdl" package="org.jboss.test.ws.interop.soapwsdl.baserpclit" sourcedestdir="${tests.output.dir}/wsconsume/java" keep="true"/>
    <wsconsume wsdl="${tests.resources.dir}/jaxws/complex/META-INF/wsdl/RegistrationService.wsdl" package="org.jboss.test.ws.jaxws.complex" sourcedestdir="${tests.output.dir}/wsconsume/java" keep="true"/>
    <wsconsume wsdl="${tests.resources.dir}/jaxws/holder/META-INF/wsdl/HolderService.wsdl" package="org.jboss.test.ws.jaxws.holder" sourcedestdir="${tests.output.dir}/wsconsume/java" keep="true"/>
    <wsconsume wsdl="${tests.resources.dir}/jaxws/samples/wssecurity/META-INF/wsdl/HelloService.wsdl" package="org.jboss.test.ws.jaxws.samples.wssecurity" sourcedestdir="${tests.output.dir}/wsconsume/java" keep="true"/>
  </target>

  <!--
    Generate BPEL sources
  -->
  <target name="servicegen" depends="tests-compile" description="Generate the BPEL resources.">
    <!-- create jbpm process archives -->
	  <mkdir dir="${tests.output.dir}/libs"/>
    <zip destfile="${tests.output.dir}/libs/jaxrpc-samples-wsbpel-hello-process.zip">
      <fileset dir="${tests.resources.dir}/jaxrpc/samples/wsbpel/hello/bpel" />
    </zip>
    <!-- Copy the BPEL sar -->
    <copy file="${core.thirdparty.dir}/jbpm-bpel.sar" todir="${tests.output.dir}/libs"/>

	  <!-- generate wsdl binding and service definitions for bpel processes -->
    <taskdef name="servicegen" classname="org.jbpm.bpel.ant.ServiceGeneratorTask">
      <classpath refid="jbpm.bpel.classpath"/>
    </taskdef>
    <servicegen processfile="${tests.output.dir}/libs/jaxrpc-samples-wsbpel-hello-process.zip"
      outputdir="${tests.output.dir}/wstools/resources/jaxrpc/samples/wsbpel/hello/WEB-INF/wsdl"
      bindingfile="hello-binding-.wsdl" servicefile="hello-service.wsdl" />
  </target>

  <!--
    Generate JAX-RPC sources
  -->
  <target name="wstools" depends="tests-compile" description="Generate the JAX-RPC artifacts.">
	
    <!-- Define the JAX-RPC tools task -->
    <taskdef name="wstools" classname="org.jboss.ws.tools.ant.wstools">
      <classpath refid="jbossws.classpath"/>
      <classpath refid="core.thirdparty.classpath"/>
      <classpath location="${core.thirdparty.dir}/jbossretro-rt.jar"/>
      <classpath location="${core.thirdparty.dir}/jboss-backport-concurrent.jar"/>
      <classpath location="${core.thirdparty.dir}/concurrent.jar"/>
      <classpath location="${tests.output.dir}/classes"/>
      <classpath location="${tests.output.dir}"/>
    </taskdef>    
    
    <!-- Generate JAX-RPC artifacts -->
    <mkdir dir="${tests.output.dir}/wstools/java"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/docstyle/wrapped/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/docstyle/wrapped/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/docstyle/bare/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/docstyle/bare/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/dynamichandler/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/dynamichandler/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/exception/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/exception/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/handler/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/handler/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/holder/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/holder/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/jmstransport/META-INF" config="${tests.resources.dir}/jaxrpc/samples/jmstransport/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/jsr109ejb/doclit/META-INF" config="${tests.resources.dir}/jaxrpc/samples/jsr109ejb/doclit/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/jsr109ejb/rpclit/META-INF" config="${tests.resources.dir}/jaxrpc/samples/jsr109ejb/rpclit/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/jsr109pojo/doclit/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/jsr109pojo/doclit/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/jsr109pojo/rpclit/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/jsr109pojo/rpclit/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/message/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/message/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/oneway/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/oneway/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/rpcstyle/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/rpcstyle/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/secureejb/META-INF" config="${tests.resources.dir}/jaxrpc/samples/secureejb/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/wsbpel/hello/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/wsbpel/hello/wstools-config.xml"/>
    <wstools dest="${tests.output.dir}/wstools/resources/jaxrpc/samples/wssecurity/WEB-INF" config="${tests.resources.dir}/jaxrpc/samples/wssecurity/wstools-config.xml"/>
    <move todir="${tests.output.dir}/wstools/java">
      <fileset dir="${tests.output.dir}/wstools/resources/jaxrpc/samples/docstyle/wrapped/WEB-INF" includes="org/**"/>
    </move>
    
    <!-- Copy generated resources -->
    <copy todir="${tests.output.dir}/resources">
      <fileset dir="${tests.output.dir}/wstools/resources">
        <include name="**/*.wsdl"/>
        <include name="**/*.xml"/>
      </fileset>
    </copy>
    <!-- Copy resources that cannot (yet) be generated -->
    <copy todir="${tests.output.dir}/resources/jaxrpc/samples" overwrite="true">
      <fileset dir="${tests.resources.dir}/jaxrpc/samples-override"/>
      <filterset>
        <filter token="jbosstest.host.name" value="${node0}"/>
      </filterset>
    </copy>
  </target>
  
  <!--
    Generate JAX-WS sources
  -->
  <target name="wsprovide" depends="tests-compile" 
    description="Provide the JAX-WS contracts." if="HAVE_JDK_1.5">
	
    <!-- Define the JAX-WS wsprovide task -->
    <taskdef name="wsprovide" classname="org.jboss.ws.tools.jaxws.ant.wsprovide">
      <classpath refid="jbossws.classpath"/>
      <classpath refid="core.thirdparty.classpath"/>
      <classpath location="${core.thirdparty.dir}/concurrent.jar"/>
      <classpath location="${tests.output.dir}/classes"/>
    </taskdef>    
    
    <wsprovide resourcedestdir="${tests.output.dir}/wsprovide/resources/jaxws/samples/wssecurity" genwsdl="true" sei="org.jboss.test.ws.jaxws.samples.wssecurity.HelloJavaBean"/>
  </target>
  
  <target name="tests-generate-resources" depends="servicegen,wstools,wsprovide">
    <javac destdir="${tests.output.dir}/classes" debug="${javac.debug}" encoding="utf-8" verbose="${javac.verbose}" deprecation="${javac.deprecation}" failonerror="${javac.fail.onerror}">
      <src path="${tests.output.dir}/wstools/java"/>
      <exclude name="org/jboss/test/ws/interop/**"/>
      <classpath refid="javac.classpath"/>
    </javac>
  </target>
  
  <!-- ================================================================== -->
  <!-- Compiling                                                          -->
  <!-- ================================================================== -->

  <target name="tests-compile" depends="wsconsume,tests-compile15" description="Compile sources"/>

  <target name="tests-compile15" depends="tests-init" if="HAVE_JDK_1.5">
    <mkdir dir="${tests.output.dir}/classes"/>
    <javac destdir="${tests.output.dir}/classes" debug="${javac.debug}" encoding="utf-8" verbose="${javac.verbose}" deprecation="${javac.deprecation}"
      failonerror="${javac.fail.onerror}" excludesfile="${excludesfile}">
      <src path="${tests.java.dir}"/>
      <src path="${tests.output.dir}/wsconsume/java"/>
      <classpath refid="javac.classpath"/>
    </javac>
  </target>
  
  <!-- ================================================================== -->
  <!-- Building                                                           -->
  <!-- ================================================================== -->
  
  <!-- Copy resources -->
  <target name="tests-copy-resources" depends="tests-init" description="Copy the deployment resources.">
    <copy-test-resources srcdir="${basedir}/src/test"/>
  </target>
  
  <target name="tests-main" depends="wsconsume,tests-compile,tests-copy-resources,tests-generate-resources" description="Build the deployments.">
    <ant antfile="${core.dir}/ant-import/build-jars-jaxrpc.xml" target="build-jars-jaxrpc" inheritall="true"/>
    <ant antfile="${core.dir}/ant-import/build-samples-jaxrpc.xml" target="build-samples-jaxrpc" inheritall="true"/>
    <ant antfile="${core.dir}/ant-import/build-jars-jaxws.xml" target="build-jars-jaxws" inheritall="true"/>
    <ant antfile="${core.dir}/ant-import/build-samples-jaxws.xml" target="build-samples-jaxws" inheritall="true"/>
  </target>

</project>
