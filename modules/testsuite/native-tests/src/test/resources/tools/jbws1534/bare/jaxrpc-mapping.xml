<?xml version='1.0' encoding='UTF-8'?><java-wsdl-mapping version='1.1' xmlns='http://java.sun.com/xml/ns/j2ee' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://java.sun.com/xml/ns/j2ee http://www.ibm.com/webservices/xsd/j2ee_jaxrpc_mapping_1_1.xsd'>
 <package-mapping>
  <package-type>org.jboss.test.ws.jbws1534</package-type>
  <namespaceURI>http://test.jboss.org/ws/jbws1534/types</namespaceURI>
 </package-mapping>
 <package-mapping>
  <package-type>org.jboss.test.ws.jbws1534</package-type>
  <namespaceURI>http://test.jboss.org/ws/jbws1534</namespaceURI>
 </package-mapping>
 <java-xml-type-mapping>
  <java-type>org.jboss.test.ws.jbws1534.Person</java-type>
  <root-type-qname xmlns:typeNS='http://test.jboss.org/ws/jbws1534/types'>typeNS:Person</root-type-qname>
  <qname-scope>complexType</qname-scope>
  <variable-mapping>
   <java-variable-name>abstract</java-variable-name>
   <xml-element-name>abstract</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>assert</java-variable-name>
   <xml-element-name>assert</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>boolean</java-variable-name>
   <xml-element-name>boolean</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>break</java-variable-name>
   <xml-element-name>break</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>byte</java-variable-name>
   <xml-element-name>byte</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>case</java-variable-name>
   <xml-element-name>case</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>catch</java-variable-name>
   <xml-element-name>catch</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>char</java-variable-name>
   <xml-element-name>char</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>class</java-variable-name>
   <xml-element-name>class</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>const</java-variable-name>
   <xml-element-name>const</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>continue</java-variable-name>
   <xml-element-name>continue</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>default</java-variable-name>
   <xml-element-name>default</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>do</java-variable-name>
   <xml-element-name>do</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>double</java-variable-name>
   <xml-element-name>double</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>else</java-variable-name>
   <xml-element-name>else</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>enum</java-variable-name>
   <xml-element-name>enum</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>extends</java-variable-name>
   <xml-element-name>extends</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>final</java-variable-name>
   <xml-element-name>final</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>finally</java-variable-name>
   <xml-element-name>finally</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>float</java-variable-name>
   <xml-element-name>float</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>for</java-variable-name>
   <xml-element-name>for</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>if</java-variable-name>
   <xml-element-name>if</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>goto</java-variable-name>
   <xml-element-name>goto</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>implements</java-variable-name>
   <xml-element-name>implements</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>import</java-variable-name>
   <xml-element-name>import</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>instanceof</java-variable-name>
   <xml-element-name>instanceof</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>int</java-variable-name>
   <xml-element-name>int</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>interface</java-variable-name>
   <xml-element-name>interface</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>long</java-variable-name>
   <xml-element-name>long</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>native</java-variable-name>
   <xml-element-name>native</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>new</java-variable-name>
   <xml-element-name>new</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>package</java-variable-name>
   <xml-element-name>package</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>private</java-variable-name>
   <xml-element-name>private</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>protected</java-variable-name>
   <xml-element-name>protected</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>public</java-variable-name>
   <xml-element-name>public</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>return</java-variable-name>
   <xml-element-name>return</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>short</java-variable-name>
   <xml-element-name>short</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>static</java-variable-name>
   <xml-element-name>static</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>strictfp</java-variable-name>
   <xml-element-name>strictfp</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>super</java-variable-name>
   <xml-element-name>super</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>switch</java-variable-name>
   <xml-element-name>switch</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>synchronized</java-variable-name>
   <xml-element-name>synchronized</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>this</java-variable-name>
   <xml-element-name>this</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>throw</java-variable-name>
   <xml-element-name>throw</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>throws</java-variable-name>
   <xml-element-name>throws</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>transient</java-variable-name>
   <xml-element-name>transient</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>try</java-variable-name>
   <xml-element-name>try</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>void</java-variable-name>
   <xml-element-name>void</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>volatile</java-variable-name>
   <xml-element-name>volatile</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>while</java-variable-name>
   <xml-element-name>while</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>true</java-variable-name>
   <xml-element-name>true</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>false</java-variable-name>
   <xml-element-name>false</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>null</java-variable-name>
   <xml-element-name>null</xml-element-name>
  </variable-mapping>
 </java-xml-type-mapping>
 <java-xml-type-mapping>
  <java-type>org.jboss.test.ws.jbws1534.TelephoneNumber</java-type>
  <root-type-qname xmlns:typeNS='http://test.jboss.org/ws/jbws1534/types'>typeNS:TelephoneNumber</root-type-qname>
  <qname-scope>complexType</qname-scope>
  <variable-mapping>
   <java-variable-name>abstract</java-variable-name>
   <xml-element-name>abstract</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>assert</java-variable-name>
   <xml-element-name>assert</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>boolean</java-variable-name>
   <xml-element-name>boolean</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>break</java-variable-name>
   <xml-element-name>break</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>byte</java-variable-name>
   <xml-element-name>byte</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>case</java-variable-name>
   <xml-element-name>case</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>catch</java-variable-name>
   <xml-element-name>catch</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>char</java-variable-name>
   <xml-element-name>char</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>class</java-variable-name>
   <xml-element-name>class</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>const</java-variable-name>
   <xml-element-name>const</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>continue</java-variable-name>
   <xml-element-name>continue</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>default</java-variable-name>
   <xml-element-name>default</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>do</java-variable-name>
   <xml-element-name>do</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>double</java-variable-name>
   <xml-element-name>double</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>else</java-variable-name>
   <xml-element-name>else</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>enum</java-variable-name>
   <xml-element-name>enum</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>extends</java-variable-name>
   <xml-element-name>extends</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>final</java-variable-name>
   <xml-element-name>final</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>finally</java-variable-name>
   <xml-element-name>finally</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>float</java-variable-name>
   <xml-element-name>float</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>for</java-variable-name>
   <xml-element-name>for</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>if</java-variable-name>
   <xml-element-name>if</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>goto</java-variable-name>
   <xml-element-name>goto</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>implements</java-variable-name>
   <xml-element-name>implements</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>import</java-variable-name>
   <xml-element-name>import</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>instanceof</java-variable-name>
   <xml-element-name>instanceof</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>int</java-variable-name>
   <xml-element-name>int</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>interface</java-variable-name>
   <xml-element-name>interface</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>long</java-variable-name>
   <xml-element-name>long</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>native</java-variable-name>
   <xml-element-name>native</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>new</java-variable-name>
   <xml-element-name>new</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>package</java-variable-name>
   <xml-element-name>package</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>private</java-variable-name>
   <xml-element-name>private</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>protected</java-variable-name>
   <xml-element-name>protected</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>public</java-variable-name>
   <xml-element-name>public</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>return</java-variable-name>
   <xml-element-name>return</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>short</java-variable-name>
   <xml-element-name>short</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>static</java-variable-name>
   <xml-element-name>static</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>strictfp</java-variable-name>
   <xml-element-name>strictfp</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>super</java-variable-name>
   <xml-element-name>super</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>switch</java-variable-name>
   <xml-element-name>switch</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>synchronized</java-variable-name>
   <xml-element-name>synchronized</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>this</java-variable-name>
   <xml-element-name>this</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>throw</java-variable-name>
   <xml-element-name>throw</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>throws</java-variable-name>
   <xml-element-name>throws</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>transient</java-variable-name>
   <xml-element-name>transient</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>try</java-variable-name>
   <xml-element-name>try</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>void</java-variable-name>
   <xml-element-name>void</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>volatile</java-variable-name>
   <xml-element-name>volatile</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>while</java-variable-name>
   <xml-element-name>while</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>true</java-variable-name>
   <xml-element-name>true</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>false</java-variable-name>
   <xml-element-name>false</xml-element-name>
  </variable-mapping>
  <variable-mapping>
   <java-variable-name>null</java-variable-name>
   <xml-element-name>null</xml-element-name>
  </variable-mapping>
 </java-xml-type-mapping>
 <service-interface-mapping>
  <service-interface>org.jboss.test.ws.jbws1534.PhoneBook_Service</service-interface>
  <wsdl-service-name xmlns:serviceNS='http://test.jboss.org/ws/jbws1534'>serviceNS:PhoneBook</wsdl-service-name>
  <port-mapping>
   <port-name>PhoneBookPort</port-name>
   <java-port-name>PhoneBookPort</java-port-name>
  </port-mapping>
 </service-interface-mapping>
 <service-endpoint-interface-mapping>
  <service-endpoint-interface>org.jboss.test.ws.jbws1534.PhoneBook_PortType</service-endpoint-interface>
  <wsdl-port-type xmlns:portTypeNS='http://test.jboss.org/ws/jbws1534'>portTypeNS:PhoneBook</wsdl-port-type>
  <wsdl-binding xmlns:bindingNS='http://test.jboss.org/ws/jbws1534'>bindingNS:PhoneBookBinding</wsdl-binding>
  <service-endpoint-method-mapping>
   <java-method-name>lookup</java-method-name>
   <wsdl-operation>lookup</wsdl-operation>
   <method-param-parts-mapping>
    <param-position>0</param-position>
    <param-type>org.jboss.test.ws.jbws1534.Person</param-type>
    <wsdl-message-mapping>
     <wsdl-message xmlns:wsdlMsgNS='http://test.jboss.org/ws/jbws1534'>wsdlMsgNS:PhoneBook_lookup</wsdl-message>
     <wsdl-message-part-name>parameters</wsdl-message-part-name>
     <parameter-mode>IN</parameter-mode>
    </wsdl-message-mapping>
   </method-param-parts-mapping>
   <wsdl-return-value-mapping>
    <method-return-value>org.jboss.test.ws.jbws1534.TelephoneNumber</method-return-value>
    <wsdl-message xmlns:wsdlMsgNS='http://test.jboss.org/ws/jbws1534'>wsdlMsgNS:PhoneBook_lookupResponse</wsdl-message>
    <wsdl-message-part-name>result</wsdl-message-part-name>
   </wsdl-return-value-mapping>
  </service-endpoint-method-mapping>
 </service-endpoint-interface-mapping>
</java-wsdl-mapping>