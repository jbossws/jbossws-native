<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2010, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<project basedir="." name="JBossWS-Native">

  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->

  <property name="stack.dir" value="${basedir}"/>
  <property name="dist.dir" value="${stack.dir}/modules/dist"/>
  <property name="dist.distro.dir" value="${dist.dir}/src/main/distro"/>
  <property name="dist.output.dir" value="${dist.dir}/target"/>
  <property name="stack.distro.dir" value="${stack.dir}/src/main/distro"/>
  <property name="stack.output.dir" value="${stack.dir}/target"/>
  <property name="stack.resources.dir" value="${stack.dir}/modules/resources/src/main/resources"/>
  <property name="deploy.artifacts.dir" value="${dist.output.dir}/assembly/deploy-artifacts"/>

  <import file="${dist.distro.dir}/build-setup.xml"/>
  <import file="${dist.distro.dir}/build-deploy.xml"/>
  <import file="${stack.resources.dir}/resources/jbossws-deploy-macros.xml"/>

  <property name="target.properties.file" value="${basedir}/target.properties"/>

  <!-- ================================================================== -->
  <!-- Initialization                                                     -->
  <!-- ================================================================== -->

  <target name="os-init">
    <condition property="ext" value=".bat">
      <not>
        <os family="unix"/>
      </not>
    </condition>
    <property name="ext" value=""/>
    <property name="mvn" value="mvn${ext}"/>
  </target>

  <target name="mvn-settings" depends="os-init">
    <!-- Loads the properties from the effective maven settings -->
    <mkdir dir="${dist.output.dir}"/>
    <exec dir="${basedir}" executable="${mvn}" failonerror="true">
      <arg value="-Doutput=${dist.output.dir}/effective-settings.xml"/>
      <arg value="help:effective-settings"/>
    </exec>
    <xmlproperty file="${dist.output.dir}/effective-settings.xml" keeproot="false"/>
    <condition property="jboss700.home" value="${profiles.profile.properties.jboss700.home}">
      <isset property="profiles.profile.properties.jboss700.home"/>
    </condition>
  	<condition property="jboss701.home" value="${profiles.profile.properties.jboss701.home}">
      <isset property="profiles.profile.properties.jboss701.home"/>
    </condition>
    <condition property="jboss702.home" value="${profiles.profile.properties.jboss702.home}">
      <isset property="profiles.profile.properties.jboss702.home"/>
    </condition>
    <condition property="jboss710.home" value="${profiles.profile.properties.jboss710.home}">
      <isset property="profiles.profile.properties.jboss710.home"/>
    </condition>

  	<fail message="jboss home not set, use jboss700.home=value, jboss701.home=value, jboss702.home=value or jboss710.home=value to set">
     <condition>
      <and>
       <not>
         <isset property="jboss701.home"/>
       </not>
       <not>
         <isset property="jboss702.home"/>
       </not>
       <not>
         <isset property="jboss700.home"/>
       </not>
       <not>
         <isset property="jboss710.home"/>
       </not>
      </and>
     </condition>
    </fail>

    <echo/>
    <echo message="jboss700.home=${jboss700.home}"/>
    <echo message="jboss701.home=${jboss701.home}"/>
    <echo message="jboss702.home=${jboss702.home}"/>
    <echo message="jboss710.home=${jboss710.home}"/>
  </target>

  <target name="init" depends="mvn-settings,prepare,os-init">

    <xmlproperty file="${stack.dir}/pom.xml"/>
    <property name="version.id" value="${project.version}"/>

    <echo message="java.version=${java.version}"/>          
    <echo message="version.id=${version.id}"/>
    <echo message="integration.target=${jbossws.integration.target}"/>

    <fail message="jbossws.integration.target not set" unless="jbossws.integration.target"/>
    <property name="deploy.structure" value="${dist.output.dir}/deploy-${jbossws.integration.target}"/>
  </target>

  <!-- ================================================================== -->
  <!-- Distribution                                                       -->
  <!-- ================================================================== -->

  <target name="prepare-deploy" depends="prepare,os-init">

    <!-- Use a system property to overwrite the empty default value -->
    <property name="maven.opts" value=""/>

    <echo/>
    <echo message="${mvn} ${maven.opts} -Pdist -Dno-testsuite install"/>
    <echo/>

    <delete dir="${deploy.artifacts.dir}"/>
    <exec dir="${basedir}" executable="${mvn}" failonerror="true">
      <arg line="${maven.opts} -Pdist -Dno-testsuite install"/>
    </exec>
  </target>

  <target name="build-bin-dist" depends="prepare,os-init,makedir" description="Build the binary distribution">
    <!-- Use a system property to overwrite the empty default value -->
    <property name="maven.opts" value=""/>

    <echo/>
    <echo message="${mvn} ${maven.opts} -Pdist -Dbindist -Dno-testsuite install"/>
    <echo/>

    <delete dir="${dist.output.dir}/jbossws-native-bin-dist"/>
    <exec dir="${basedir}" executable="${mvn}" failonerror="true">
      <arg line="${maven.opts} -Pdist -Dbindist -Dno-testsuite install"/>
    </exec>

    <zip destfile="${stack.output.dir}/jbossws-native-bin-dist.zip">
      <zipfileset
        dir="${dist.output.dir}/assembly/jbossws-native-bin-dist"
        includes="build/ deploy/ docs/ tests/ build.xml ant.properties.example"
        prefix="jbossws-native-bin-dist"/>
    </zip>
  </target>

  <target name="build-src-dist" depends="prepare,os-init,makedir" description="Build the source distribution">
    <!-- Use a system property to overwrite the empty default value -->
    <property name="maven.opts" value=""/>

    <echo/>
    <echo message="${mvn} ${maven.opts} -Pdist -Dsrcdist -Dno-testsuite install"/>
    <echo/>

    <delete dir="${stack.output.dir}/jbossws-native-src-dist"/>
    <exec dir="${basedir}" executable="${mvn}" failonerror="true">
      <arg line="${maven.opts} -Pdist -Dsrcdist -Dno-testsuite install"/>
    </exec>

    <zip destfile="${stack.output.dir}/jbossws-native-src-dist.zip">
      <zipfileset
        dir="${dist.output.dir}/assembly/jbossws-native-src-dist"
        includes="modules/ src/ eclipse/ build.xml pom.xml profiles.xml.example .classpath .project "
        prefix="jbossws-native-src-dist"/>
    </zip>
  </target>

   <target name="check.exist">
       <available file="${stack.output.dir}" property="file.exists" value="true" />
   </target>

   <target name="makedir" depends="check.exist" unless="file.exists">
       <mkdir dir="${stack.output.dir}" />
   </target>


</project>
