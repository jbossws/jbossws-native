<?xml version="1.0" encoding="UTF-8"?>
<java-wsdl-mapping xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.1" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee    http://www.ibm.com/webservices/xsd/j2ee_jaxrpc_mapping_1_1.xsd">
<package-mapping>
<package-type>org.jboss.test.ws.jaxws.jsr181.complex.client</package-type>
<namespaceURI>http://complex.jsr181.jaxws.ws.test.jboss.org/</namespaceURI>
</package-mapping>
<package-mapping>
<package-type>org.jboss.test.ws.jaxws.jsr181.complex.client</package-type>
<namespaceURI>http://extra.complex.jsr181.jaxws.ws.test.jboss.org/</namespaceURI>
</package-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Register</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:Register</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>customer</java-variable-name>
<xml-element-name>Customer</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>when</java-variable-name>
<xml-element-name>When</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Statistics</java-type>
<root-type-qname xmlns:typeNS="http://extra.complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:Statistics</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>activationTime</java-variable-name>
<xml-element-name>activationTime</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>hits</java-variable-name>
<xml-element-name>hits</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.InvoiceCustomer</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:InvoiceCustomer</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>address</java-variable-name>
<xml-element-name>address</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>contactNumbers</java-variable-name>
<xml-element-name>contactNumbers</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>id</java-variable-name>
<xml-element-name>id</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>name</java-variable-name>
<xml-element-name>name</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>referredCustomers</java-variable-name>
<xml-element-name>referredCustomers</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>cycleDay</java-variable-name>
<xml-element-name>cycleDay</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.BulkRegister</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:BulkRegister</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>customers</java-variable-name>
<xml-element-name>Customers</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>when</java-variable-name>
<xml-element-name>When</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.ValidationException</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:ValidationException</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>message</java-variable-name>
<xml-element-name>message</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>failiedCustomers</java-variable-name>
<xml-element-name>failiedCustomers</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Address</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:Address</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>city</java-variable-name>
<xml-element-name>city</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>state</java-variable-name>
<xml-element-name>state</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>street</java-variable-name>
<xml-element-name>street</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>zip</java-variable-name>
<xml-element-name>zip</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Name</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:Name</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>firstName</java-variable-name>
<xml-element-name>firstName</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>lastName</java-variable-name>
<xml-element-name>lastName</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>middleName</java-variable-name>
<xml-element-name>middleName</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.BulkRegisterResponse</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:BulkRegisterResponse</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>registeredIDs</java-variable-name>
<xml-element-name>RegisteredIDs</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.PhoneNumber</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:PhoneNumber</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>areaCode</java-variable-name>
<xml-element-name>areaCode</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>exchange</java-variable-name>
<xml-element-name>exchange</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>line</java-variable-name>
<xml-element-name>line</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.RegisterForInvoiceResponse</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:RegisterForInvoiceResponse</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>done</java-variable-name>
<xml-element-name>done</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.RegisterForInvoice</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:RegisterForInvoice</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>invoiceCustomer</java-variable-name>
<xml-element-name>InvoiceCustomer</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.RegisterResponse</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:RegisterResponse</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>registeredID</java-variable-name>
<xml-element-name>RegisteredID</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.GetStatistics</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:GetStatistics</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>customer</java-variable-name>
<xml-element-name>Customer</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.GetStatisticsResponse</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:GetStatisticsResponse</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>statistics</java-variable-name>
<xml-element-name>Statistics</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Customer</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:Customer</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>address</java-variable-name>
<xml-element-name>address</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>contactNumbers</java-variable-name>
<xml-element-name>contactNumbers</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>id</java-variable-name>
<xml-element-name>id</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>name</java-variable-name>
<xml-element-name>name</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>referredCustomers</java-variable-name>
<xml-element-name>referredCustomers</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.AlreadyRegisteredException</java-type>
<root-type-qname xmlns:typeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">typeNS:AlreadyRegisteredException</root-type-qname>
<qname-scope>complexType</qname-scope>
<variable-mapping>
<java-variable-name>message</java-variable-name>
<xml-element-name>message</xml-element-name>
</variable-mapping>
<variable-mapping>
<java-variable-name>existingId</java-variable-name>
<xml-element-name>existingId</xml-element-name>
</variable-mapping>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Customer[]</java-type>
<anonymous-type-qname>http://complex.jsr181.jaxws.ws.test.jboss.org/:BulkRegister&gt;Customers[0,unbounded]</anonymous-type-qname>
<qname-scope>complexType</qname-scope>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>long[]</java-type>
<anonymous-type-qname>http://complex.jsr181.jaxws.ws.test.jboss.org/:BulkRegisterResponse&gt;RegisteredIDs[0,unbounded]</anonymous-type-qname>
<qname-scope>complexType</qname-scope>
</java-xml-type-mapping>
<java-xml-type-mapping>
<java-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Customer[]</java-type>
<anonymous-type-qname>http://complex.jsr181.jaxws.ws.test.jboss.org/:Customer&gt;referredCustomers[0,unbounded]</anonymous-type-qname>
<qname-scope>complexType</qname-scope>
</java-xml-type-mapping>
<exception-mapping>
<exception-type>org.jboss.test.ws.jaxws.jsr181.complex.client.ValidationException</exception-type>
<wsdl-message xmlns:exMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">exMsgNS:ValidationException</wsdl-message>
<constructor-parameter-order>
<element-name>message</element-name>
<element-name>failiedCustomers</element-name>
</constructor-parameter-order>
</exception-mapping>
<exception-mapping>
<exception-type>org.jboss.test.ws.jaxws.jsr181.complex.client.AlreadyRegisteredException</exception-type>
<wsdl-message xmlns:exMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">exMsgNS:AlreadyRegisteredException</wsdl-message>
<constructor-parameter-order>
<element-name>message</element-name>
<element-name>existingId</element-name>
</constructor-parameter-order>
</exception-mapping>
<service-interface-mapping>
<service-interface>org.jboss.test.ws.jaxws.jsr181.complex.client.RegistrationServiceService</service-interface>
<wsdl-service-name xmlns:serviceNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">serviceNS:RegistrationServiceService</wsdl-service-name>
<port-mapping>
<port-name>RegistrationServicePort</port-name>
<java-port-name>RegistrationServicePort</java-port-name>
</port-mapping>
</service-interface-mapping>
<service-endpoint-interface-mapping>
<service-endpoint-interface>org.jboss.test.ws.jaxws.jsr181.complex.client.RegistrationService</service-endpoint-interface>
<wsdl-port-type xmlns:portTypeNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">portTypeNS:RegistrationService</wsdl-port-type>
<wsdl-binding xmlns:bindingNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">bindingNS:RegistrationServiceBinding</wsdl-binding>
<service-endpoint-method-mapping>
<java-method-name>bulkRegister</java-method-name>
<wsdl-operation>BulkRegister</wsdl-operation>
<wrapped-element/>
<method-param-parts-mapping>
<param-position>0</param-position>
<param-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Customer[]</param-type>
<wsdl-message-mapping>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_BulkRegister</wsdl-message>
<wsdl-message-part-name>Customers</wsdl-message-part-name>
<parameter-mode>IN</parameter-mode>
</wsdl-message-mapping>
</method-param-parts-mapping>
<method-param-parts-mapping>
<param-position>1</param-position>
<param-type>java.util.Calendar</param-type>
<wsdl-message-mapping>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_BulkRegister</wsdl-message>
<wsdl-message-part-name>When</wsdl-message-part-name>
<parameter-mode>IN</parameter-mode>
</wsdl-message-mapping>
</method-param-parts-mapping>
<wsdl-return-value-mapping>
<method-return-value>long[]</method-return-value>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_BulkRegisterResponse</wsdl-message>
<wsdl-message-part-name>RegisteredIDs</wsdl-message-part-name>
</wsdl-return-value-mapping>
</service-endpoint-method-mapping>
<service-endpoint-method-mapping>
<java-method-name>getStatistics</java-method-name>
<wsdl-operation>GetStatistics</wsdl-operation>
<wrapped-element/>
<method-param-parts-mapping>
<param-position>0</param-position>
<param-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Customer</param-type>
<wsdl-message-mapping>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_GetStatistics</wsdl-message>
<wsdl-message-part-name>Customer</wsdl-message-part-name>
<parameter-mode>IN</parameter-mode>
</wsdl-message-mapping>
</method-param-parts-mapping>
<wsdl-return-value-mapping>
<method-return-value>org.jboss.test.ws.jaxws.jsr181.complex.client.Statistics</method-return-value>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_GetStatisticsResponse</wsdl-message>
<wsdl-message-part-name>Statistics</wsdl-message-part-name>
</wsdl-return-value-mapping>
</service-endpoint-method-mapping>
<service-endpoint-method-mapping>
<java-method-name>register</java-method-name>
<wsdl-operation>Register</wsdl-operation>
<wrapped-element/>
<method-param-parts-mapping>
<param-position>0</param-position>
<param-type>org.jboss.test.ws.jaxws.jsr181.complex.client.Customer</param-type>
<wsdl-message-mapping>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_Register</wsdl-message>
<wsdl-message-part-name>Customer</wsdl-message-part-name>
<parameter-mode>IN</parameter-mode>
</wsdl-message-mapping>
</method-param-parts-mapping>
<method-param-parts-mapping>
<param-position>1</param-position>
<param-type>java.util.Calendar</param-type>
<wsdl-message-mapping>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_Register</wsdl-message>
<wsdl-message-part-name>When</wsdl-message-part-name>
<parameter-mode>IN</parameter-mode>
</wsdl-message-mapping>
</method-param-parts-mapping>
<wsdl-return-value-mapping>
<method-return-value>long</method-return-value>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_RegisterResponse</wsdl-message>
<wsdl-message-part-name>RegisteredID</wsdl-message-part-name>
</wsdl-return-value-mapping>
</service-endpoint-method-mapping>
<service-endpoint-method-mapping>
<java-method-name>registerForInvoice</java-method-name>
<wsdl-operation>RegisterForInvoice</wsdl-operation>
<wrapped-element/>
<method-param-parts-mapping>
<param-position>0</param-position>
<param-type>org.jboss.test.ws.jaxws.jsr181.complex.client.InvoiceCustomer</param-type>
<wsdl-message-mapping>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_RegisterForInvoice</wsdl-message>
<wsdl-message-part-name>InvoiceCustomer</wsdl-message-part-name>
<parameter-mode>IN</parameter-mode>
</wsdl-message-mapping>
</method-param-parts-mapping>
<wsdl-return-value-mapping>
<method-return-value>boolean</method-return-value>
<wsdl-message xmlns:wsdlMsgNS="http://complex.jsr181.jaxws.ws.test.jboss.org/">wsdlMsgNS:RegistrationService_RegisterForInvoiceResponse</wsdl-message>
<wsdl-message-part-name>done</wsdl-message-part-name>
</wsdl-return-value-mapping>
</service-endpoint-method-mapping>
</service-endpoint-interface-mapping>
</java-wsdl-mapping>
