// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package org.jboss.test.ws.jaxrpc.encoded.marshalltest;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Calendar;

import org.jboss.logging.Logger;

public class MarshallTestImpl implements MarshallTest
{
   // Provide logging
   private static Logger log = Logger.getLogger(MarshallTestImpl.class);
   
   public BigDecimal[] bigDecimalArrayTest(BigDecimal[] arrayOfBigDecimal_1)
   {
      log.info("bigDecimalArrayTest: " + Arrays.asList(arrayOfBigDecimal_1));
      return arrayOfBigDecimal_1;
   }

   public BigDecimal[][] bigDecimalMultiArrayTest(BigDecimal[][] arrayOfarrayOfBigDecimal_1)
   {
      log.info("bigDecimalMultiArrayTest: " + Arrays.asList(arrayOfarrayOfBigDecimal_1));
      return arrayOfarrayOfBigDecimal_1;
   }

   public BigDecimal bigDecimalTest(BigDecimal bigDecimal_1)
   {
      log.info("bigDecimalTest: " + bigDecimal_1);
      return bigDecimal_1;
   }

   public BigInteger[] bigIntegerArrayTest(BigInteger[] arrayOfBigInteger_1)
   {
      log.info("bigIntegerArrayTest: " + Arrays.asList(arrayOfBigInteger_1));
      return arrayOfBigInteger_1;
   }

   public BigInteger[][] bigIntegerMultiArrayTest(BigInteger[][] arrayOfarrayOfBigInteger_1)
   {
      log.info("bigIntegerMultiArrayTest: " + Arrays.asList(arrayOfarrayOfBigInteger_1));
      return arrayOfarrayOfBigInteger_1;
   }

   public BigInteger bigIntegerTest(BigInteger bigInteger_1)
   {
      log.info("bigIntegerTest: " + bigInteger_1);
      return bigInteger_1;
   }

   public boolean[] booleanArrayTest(boolean[] arrayOfboolean_1)
   {
      return arrayOfboolean_1;
   }

   public boolean[][] booleanMultiArrayTest(boolean[][] arrayOfarrayOfboolean_1)
   {
      return arrayOfarrayOfboolean_1;
   }

   public boolean booleanTest(boolean boolean_1)
   {
      return boolean_1;
   }

   public byte[] byteArrayTest(byte[] arrayOfbyte_1)
   {
      return arrayOfbyte_1;
   }

   public byte[][] byteMultiArrayTest(byte[][] arrayOfarrayOfbyte_1)
   {
      return arrayOfarrayOfbyte_1;
   }

   public byte byteTest(byte byte_1)
   {
      return byte_1;
   }

   public Calendar[] calendarArrayTest(Calendar[] arrayOfCalendar_1)
   {
      return arrayOfCalendar_1;
   }

   public Calendar[][] calendarMultiArrayTest(Calendar[][] arrayOfarrayOfCalendar_1)
   {
      return arrayOfarrayOfCalendar_1;
   }

   public Calendar calendarTest(Calendar calendar_1)
   {
      return calendar_1;
   }

   public double[] doubleArrayTest(double[] arrayOfdouble_1)
   {
      return arrayOfdouble_1;
   }

   public double[][] doubleMultiArrayTest(double[][] arrayOfarrayOfdouble_1)
   {
      return arrayOfarrayOfdouble_1;
   }

   public double doubleTest(double double_1)
   {
      return double_1;
   }

   public float[] floatArrayTest(float[] arrayOffloat_1)
   {
      return arrayOffloat_1;
   }

   public float[][] floatMultiArrayTest(float[][] arrayOfarrayOffloat_1)
   {
      return arrayOfarrayOffloat_1;
   }

   public float floatTest(float float_1)
   {
      return float_1;
   }

   public int[] intArrayTest(int[] arrayOfint_1)
   {
      return arrayOfint_1;
   }

   public int[][] intMultiArrayTest(int[][] arrayOfarrayOfint_1)
   {
      return arrayOfarrayOfint_1;
   }

   public int intTest(int int_1)
   {
      return int_1;
   }

   public JavaBean[] javaBeanArrayTest(JavaBean[] arrayOfJavaBean_1)
   {
      return arrayOfJavaBean_1;
   }

   public JavaBean[][] javaBeanMultiArrayTest(JavaBean[][] arrayOfarrayOfJavaBean_1)
   {
      return arrayOfarrayOfJavaBean_1;
   }

   public JavaBean javaBeanTest(JavaBean javaBean_1)
   {
      return javaBean_1;
   }

   public long[] longArrayTest(long[] arrayOflong_1)
   {
      return arrayOflong_1;
   }

   public long[][] longMultiArrayTest(long[][] arrayOfarrayOflong_1)
   {
      return arrayOfarrayOflong_1;
   }

   public long longTest(long long_1)
   {
      return long_1;
   }

   public void myServiceExceptionTest() throws MyServiceException
   {
      throw new MyServiceException("just a test");
   }

   public short[] shortArrayTest(short[] arrayOfshort_1)
   {
      return arrayOfshort_1;
   }

   public short[][] shortMultiArrayTest(short[][] arrayOfarrayOfshort_1)
   {
      return arrayOfarrayOfshort_1;
   }

   public short shortTest(short short_1)
   {
      return short_1;
   }

   public String[] stringArrayTest(String[] arrayOfString_1)
   {
      return arrayOfString_1;
   }

   public String[][] stringMultiArrayTest(String[][] arrayOfarrayOfString_1)
   {
      return arrayOfarrayOfString_1;
   }

   public String stringTest(String string_1)
   {
      return string_1;
   }

   public ValueType[] valueTypeArrayTest(ValueType[] arrayOfValueType_1)
   {
      return arrayOfValueType_1;
   }

   public ValueType[][] valueTypeMultiArrayTest(ValueType[][] arrayOfarrayOfValueType_1)
   {
      return arrayOfarrayOfValueType_1;
   }

   public ValueType valueTypeTest(ValueType valueType_1)
   {
      return valueType_1;
   }

   public void voidTest()
   {
   }

   public Boolean wrapperBooleanTest(Boolean boolean_1)
   {
      return boolean_1;
   }

   public Byte wrapperByteTest(Byte byte_1)
   {
      return byte_1;
   }

   public Double wrapperDoubleTest(Double double_1)
   {
      return double_1;
   }

   public Float wrapperFloatTest(Float float_1)
   {
      return float_1;
   }

   public Integer wrapperIntegerTest(Integer integer_1)
   {
      return integer_1;
   }

   public Long wrapperLongTest(Long long_1)
   {
      return long_1;
   }

   public Short wrapperShortTest(Short short_1)
   {
      return short_1;
   }
}
