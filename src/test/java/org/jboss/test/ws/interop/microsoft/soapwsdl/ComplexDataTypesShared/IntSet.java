// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package org.jboss.test.ws.interop.microsoft.soapwsdl.ComplexDataTypesShared;


import java.util.Map;
import java.util.HashMap;

public class IntSet {
    private java.lang.String value;
    private static java.util.Map valueMap = new HashMap();
    public static final java.lang.String _value1String = "1";
    public static final java.lang.String _value2String = "2";
    public static final java.lang.String _value3String = "-3";
    public static final java.lang.String _value4String = "4";
    public static final java.lang.String _value5String = "-5";
    
    public static final java.lang.String _value1 = new java.lang.String(_value1String);
    public static final java.lang.String _value2 = new java.lang.String(_value2String);
    public static final java.lang.String _value3 = new java.lang.String(_value3String);
    public static final java.lang.String _value4 = new java.lang.String(_value4String);
    public static final java.lang.String _value5 = new java.lang.String(_value5String);
    
    public static final IntSet value1 = new IntSet(_value1);
    public static final IntSet value2 = new IntSet(_value2);
    public static final IntSet value3 = new IntSet(_value3);
    public static final IntSet value4 = new IntSet(_value4);
    public static final IntSet value5 = new IntSet(_value5);
    
    protected IntSet(java.lang.String value) {
        this.value = value;
        valueMap.put(this.toString(), this);
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static IntSet fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (value1.value.equals(value)) {
            return value1;
        } else if (value2.value.equals(value)) {
            return value2;
        } else if (value3.value.equals(value)) {
            return value3;
        } else if (value4.value.equals(value)) {
            return value4;
        } else if (value5.value.equals(value)) {
            return value5;
        }
        throw new java.lang.IllegalArgumentException();
    }
    
    public static IntSet fromString(java.lang.String value)
        throws java.lang.IllegalStateException {
        IntSet ret = (IntSet)valueMap.get(value);
        if (ret != null) {
            return ret;
        }
        if (value.equals(_value1String)) {
            return value1;
        } else if (value.equals(_value2String)) {
            return value2;
        } else if (value.equals(_value3String)) {
            return value3;
        } else if (value.equals(_value4String)) {
            return value4;
        } else if (value.equals(_value5String)) {
            return value5;
        }
        throw new IllegalArgumentException();
    }
    
    public java.lang.String toString() {
        return value.toString();
    }
    
    private java.lang.Object readResolve()
        throws java.io.ObjectStreamException {
        return fromValue(getValue());
    }
    
    public boolean equals(java.lang.Object obj) {
        if (!(obj instanceof IntSet)) {
            return false;
        }
        return ((IntSet)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
